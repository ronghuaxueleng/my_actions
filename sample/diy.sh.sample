#!/usr/bin/env bash
## 此文件为 DIY 自定义脚本模板，您需要复制此文件至 config 目录并更名为 diy.sh，同时启用配置文件中的相关变量后才可以使用

## 您需要填写此脚本的以下几处地方：
## 1. 作者昵称
## 2. 作者脚本地址链接
## 3. 作者脚本名称
## 4. 删除失效的活动脚本（选填）
## 5. 自定义命令（选填）

## Tips:看清楚板块和其中的注释，不要乱写乱改

##############################  定  义  代  理  相  关  设  置  ##############################
## 判定是否启用了下载代理，${DownloadJudgment}是一个判定变量，勿动
if [[ ${EnableExtraShellProxyDownload} == true ]]; then
  DownloadJudgment=${ExtraShellProxyUrl}
else
  ## 如果没有启用下载代理该变量赋值为空
  DownloadJudgment=
fi


##############################  1. 作  者  昵  称  （必填）  ##############################
# 使用空格隔开
author_list=""

## 添加更多作者昵称（必填）示例：author_list="testuser1 testuser2"  直接追加进双引号内，不要新定义变量

##############################  2. 作  者  脚  本  地  址  链  接  （必填）  ##############################
# 1.从作者库中随意挑选一个脚本地址，每个作者的地址添加一个即可，无须重复添加
# 2.将地址最后的 “脚本名称+后缀” 剪切到下一个变量里（my_scripts_list_xxx
scripts_base_url_1=${DownloadJudgment}


## 添加脚本地址链接示例：scripts_base_url_2=${DownloadJudgment}https://raw.githubusercontent.com/testuser/testrepository/main/
## 注意带上项目分支名称，如果脚本在文件夹中也要带上文件夹名，不要忘了最后面的斜杠；并且一定要使用 raw 地址，填错任何一个地方都会导致脚本拉取失败

##############################  3. 作  者  脚  本  名  称  （必填）  ##############################
# 将相应作者的脚本填写到以下变量中
my_scripts_list_1=""


## 添加脚本名称示例：my_scripts_list_2="jd_test1.js jd_test2.js jd_test3.js"
##                 my_scripts_list_3="jd_ceshiA.js jd_ceshiB.js jd_ceshiC.js"


##########################  4. 删  除  失  效  的  活  动  脚  本  （选填）  ##########################
## 删除失效的活动脚本示例： rm -rf ${ScriptsDir}/jd_test.js


##############################  随  机  函  数  ##############################
## 以下为脚本核心内容，请不要随意更改
rand() {
  min=$1
  max=$(($2 - $min + 1))
  num=$(cat /proc/sys/kernel/random/uuid | cksum | awk -F ' ' '{print $1}')
  echo $(($num % $max + $min))
}
cd ${ShellDir}
index=1
for author in $author_list; do
  echo -e "开始下载 $author 的活动脚本：\n"
  # 下载my_scripts_list中的每个js文件，重命名增加前缀"作者昵称_"，增加后缀".new"
  eval scripts_list=\$my_scripts_list_${index}
  #echo $scripts_list
  eval url_list=\$scripts_base_url_${index}
  #echo $url_list
  for js in $scripts_list; do
    eval url=$url_list$js
    echo $url
    eval name=$js
    echo $name
    wget -q --no-check-certificate $url -O scripts/$name.new

    # 如果上一步下载没问题，才去掉后缀".new"，如果上一步下载有问题，就保留之前正常下载的版本
    # 随机添加个cron到crontab.list
    if [ $? -eq 0 ]; then
      mv -f scripts/$name.new scripts/$name
      echo -e "更新 $name 完成...\n"
      croname=$(echo "$name" | awk -F\. '{print $1}')
      script_date=$(cat scripts/$name | grep "http" | awk '{if($1~/^[0-59]/) print $1,$2,$3,$4,$5}' | sort | uniq | head -n 1)
      if [ -z "${script_date}" ]; then
        cron_min=$(rand 1 59)
        cron_hour=$(rand 7 9)
        [ $(grep -c "$croname" ${ListCron}) -eq 0 ] && sed -i "/hangup/a${cron_min} ${cron_hour} * * * bash jd $croname" ${ListCron}
      else
        [ $(grep -c "$croname" ${ListCron}) -eq 0 ] && sed -i "/hangup/a${script_date} bash jd $croname" ${ListCron}
      fi
    else
      [ -f scripts/$name.new ] && rm -f scripts/$name.new
      echo -e "更新 $name 失败，使用上一次正常的版本...\n"
    fi
  done
  index=$(($index + 1))
done

##############################  5. 自  定  义  命  令  （选填）  ##############################
