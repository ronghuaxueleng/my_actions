# File: .github/workflows/repo-sync.yml
name: 自动同步
on:
  schedule:
    - cron: "*/30 * * * *"
  workflow_dispatch:
  watch:
    types: started
  repository_dispatch:
    types: repo-sync
jobs:
  repo-sync:
    name: 创建脚本
    runs-on: ubuntu-latest
    steps:
      - name: 设置githup信息
        env:
          email: ${{ secrets.EMAIL }}
          username: ${{ secrets.USERNAME }}
        run: |
          git config --global user.name "$username"
          git config --global user.email "$email"
      - name: 设置SSH私钥信息
        env:
          JD_BASE_REPO_URL: gitee.com
          JD_BASE: jd_base
          JD_BASE_HOST: jd_base_gitee
          JD_BASE_KEY: ${{ secrets.token_jd_base_Keys }}
          JD_SCRIPTS_REPO_URL: github.com
          JD_SCRIPTS: jd_scripts
          JD_SCRIPTS_HOST: jd_scripts_githup
          JD_SCRIPTS_KEY: ${{ secrets.token_Private_Keys }}
        run: |
          mkdir -p ~/.ssh/ && chmod 700 ~/.ssh
          echo "$JD_BASE_KEY" > ~/.ssh/$JD_BASE
          echo "$JD_SCRIPTS_KEY" > ~/.ssh/$JD_SCRIPTS
          chmod 600 ~/.ssh/$JD_BASE
          chmod 600 ~/.ssh/$JD_SCRIPTS
          echo -e "Host $JD_BASE_HOST" >> ~/.ssh/config
          echo -e "\tHostname $JD_BASE_REPO_URL" >> ~/.ssh/config
          echo -e "\tIdentityFile=~/.ssh/$JD_BASE" >> ~/.ssh/config
          echo -e "\n" >> ~/.ssh/config
          echo -e "Host $JD_SCRIPTS_HOST" >> ~/.ssh/config
          echo -e "\tHostname $JD_SCRIPTS_REPO_URL" >> ~/.ssh/config
          echo -e "\tIdentityFile=~/.ssh/$JD_SCRIPTS" >> ~/.ssh/config
          # echo -e "\n\nHost *\n StrictHostKeyChecking no\n" >> /etc/ssh/ssh_config
          chmod 644 ~/.ssh/config
          ssh-keyscan $JD_BASE_REPO_URL >> ~/.ssh/known_hosts
          ssh-keyscan $JD_SCRIPTS_REPO_URL >> ~/.ssh/known_hosts
      - name: 开始同步
        run: |
          shopt -s extglob
          git clone -b master git@jd_base_gitee:supermanito/jd_base.git JD-FreeFuck
          cd JD-FreeFuck
          rm -rf .git
          rm -rf .github
          rm -rf .gitignore
          rm -rf git_pull.sh
          sed -i 's/useradmin/admin/' jd.sh
          sed -i 's/supermanito/admin/' jd.sh
          cd ../
          git clone git@jd_scripts_githup:ronghuaxueleng/my_actions.git
          cp -f ./my_actions/jd.sh ./JD-FreeFuck
          cp -f ./my_actions/git_pull.sh ./JD-FreeFuck
          cp -f ./my_actions/shareCode.py ./JD-FreeFuck
          cp -f ./my_actions/shareCode.sh ./JD-FreeFuck
          cp -f ./my_actions/verificationShareCodeUrl.py ./JD-FreeFuck
          cp -rf ./my_actions/sample ./JD-FreeFuck/
          cp -rf ./my_actions/OpenCard ./JD-FreeFuck/
          cp -rf ./my_actions/docker/docker-entrypoint.sh ./JD-FreeFuck/docker/
          cp -rf ./my_actions/docker/requirements.txt ./JD-FreeFuck/docker/
          cp -rf ./my_actions/docker/refresh.sh ./JD-FreeFuck/docker/
          cp -rf ./my_actions/docker/install_env.sh ./JD-FreeFuck/docker/
          cp -f ./my_actions/buildScripts.sh ./
          cd ./my_actions
          git checkout source
          rm -rf !(.git | .githup)
          cd ../
          cp -rf ./JD-FreeFuck/* ./my_actions
          cd ./my_actions
          git add .
          git commit --allow-empty -m "up"
          git push
      - name: 同步到gitee
        uses: Yikun/hub-mirror-action@master
        with:
          src: github/ronghuaxueleng
          dst: gitee/getready
          static_list: "my_actions"
          dst_key: ${{ secrets.GITEE_KEY }}
          dst_token: ${{ secrets.GITEE_TOKEN }}
